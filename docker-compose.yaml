services:
  client:
    container_name: client
    image: client
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    networks:
      - lantern-network 
    ports:
      - 80:80
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    networks:
      - lantern-network 
    ports:
      - 8080:8080
      - "9999:9999/udp"
    restart: always
    environment:
      MQTT_URL: "mqtt://lantern:ilovelamp@mqtt:1883"
      SERVER_PORT: 8080
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    command: ["./bin/wait-for-postgres.sh", "${POSTGRES_HOST}", "./bin/server.sh"]

  mqtt:
    hostname: mqtt
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto:/etc/mosquitto
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - lantern-network

  postgres:
    image: postgres:10.4
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ALLOW_IP_RANGE: '0.0.0.0/0'
    networks:
      - lantern-network 

networks:
  lantern-network:
    driver: bridge